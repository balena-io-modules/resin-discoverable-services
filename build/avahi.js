// Generated by CoffeeScript 1.11.1
(function() {
  var Promise, dbus, getAvahiServer, getDbus;

  Promise = require('bluebird');

  dbus = require('dbus-native');

  getDbus = function() {
    return Promise["try"](function() {
      return dbus.createClient({
        busAddress: process.env.DBUS_SYSTEM_BUS_ADDRESS || 'unix:path=/var/run/dbus/system_bus_socket'
      });
    }).disposer(function(bus) {
      var ref;
      return bus != null ? (ref = bus.connection) != null ? ref.end() : void 0 : void 0;
    });
  };

  getAvahiServer = function(bus) {
    var service;
    service = bus.getService('org.freedesktop.Avahi');
    return Promise.fromCallback(function(callback) {
      return service.getInterface('/', 'org.freedesktop.Avahi.Server', callback);
    });
  };


  /*
   * @summary Detects whether a D-Bus Avahi connection is possible
   * @function
   * @public
   *
   * @description
   * If the promise returned by this method resolves to true, other Avahi methods
   * should work. If it doesn't, they definitely will not.
   *
   * @fulfil {boolean} - Is an Avahi connection possible
   * @returns {Promise}
   *
   * @example
   * avahi.isAvailable().then((canUseAvahi) => {
   *   if (canUseAvahi) { ... }
   * })
   */

  exports.isAvailable = function() {
    return Promise.using(getDbus(), function(bus) {
      return getAvahiServer(bus)["return"](true);
    }).catchReturn(false);
  };

}).call(this);
